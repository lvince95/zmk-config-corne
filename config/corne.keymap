#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "zmk-helpers/key-labels/42.h"

#define BASE 0
#define NAV 1
#define NUM 2
#define RSYM 3
#define LSYM 4
#define MEDIA 5
#define BT 6

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LT5 LM0 LM1 LM2 LM3 LM4 LM5 LB0 LB1 LB2 LB3 LB4 LB5
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RT5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2

#include "includes/settings.dtsi"
#include "includes/combos.dtsi"
#include "includes/behaviors.dtsi"

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp F    &kp P      &kp B      &kp J    &kp L     &kp U      &kp Y    &kp SQT   &kp BSPC
&ss  &hml LGUI A  &hml LALT R  &hml LCTRL S    &hmsl LSHIFT T      &kp G      &kp M    &hmsr LSHIFT N     &hmr LCTRL E      &hmr LALT I    &hmr LGUI O     &ss
&ss  &kp Z  &kp X  &kp C    &kp D      &kp V      &kp K    &kp H     &kp COMMA  &kp DOT  &kp FSLH  &ss
                         &lt BT TAB  &lt NAV SPACE  &lt RSYM ESC    &lt LSYM RET  &lt NUM BSPC  &lt MEDIA DEL
            >;
        };

        navigation_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans    &kp CARET  &kp DOLLAR  &trans     &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT  &trans  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans    &kp H     &kp J      &kp K       &kp L      &trans  &trans
                            &trans     &trans     &trans    &kp RET   &kp BSPC   &kp DEL
            >;
        };

        number_layer {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans     &trans     &kp RALT  &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        right_symbol_layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans     &kp LS(AMPS)   &kp SEMI        &kp LBKT      &kp RBKT      &kp LS(PRCNT)  &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans     &kp LS(PIPE)   &kp LS(COLON)   &kp LS(LPAR)  &kp LS(RPAR)  &kp LS(QMARK)  &trans
&trans  &trans    &kp RALT  &trans     &trans     &trans     &kp LS(TILDE)  &kp LS(DOLLAR)  &kp LS(LBRC)  &kp LS(RBRC)  &kp LS(AT)     &trans
                            &kp TAB    &kp SPACE  &kp ESC    &trans         &trans          &trans
            >;
        };

        left_symbol_layer {
            bindings = <
&trans  &kp GRAVE      &kp LS(LT)  &kp LS(GT)    &kp LS(DQT)    &kp DOT          &trans   &trans     &trans     &trans    &trans    &trans
&trans  &kp LS(EXCL)   &kp MINUS   &kp LS(PLUS)  &kp EQUAL      &kp LS(POUND)    &trans   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &trans
&trans  &kp LS(CARET)  &kp FSLH    &kp LS(STAR)  &kp LS(UNDER)  &kp BSLH         &trans   &trans     &trans     &kp RALT  &trans    &trans
                                   &trans        &trans         &trans           &kp RET  &kp BSPC   &kp DEL
            >;
        };

        media_layer {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &kp PRINTSCREEN    &trans  &kp C_VOL_DN      &kp C_VOLUME_UP  &kp C_MUTE  &trans      &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans             &trans  &kp C_PLAY_PAUSE  &kp C_PREVIOUS   &kp C_NEXT  &kp C_STOP  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans             &trans  &trans            &trans           &trans      &trans      &trans
                         &trans  &trans  &trans             &trans  &trans            &trans
            >;
        };

        bluetooth_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_PRV    &bt BT_NXT      &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };
    };
};
